# Framework
{{< include _macros.qmd >}}


Every data-driven engineering problem is unique. But there are also similarities among all engineering problems. We shall now learn a framework that allow us to frame and face any data-driven engineering problem, and any sub-problems into which a problem can be broken down. This framework is build on some notions that help us analyse the problem, and on a set of principles. This set of principles is important because it mathematically guarantees an optimal solution to the problem -- within the goals, means, and data into which we framed the problem.

## Decision Theory

There is always a goal underlying any engineering problem. The problem itself is how to reach that goal. Typically there are several possible courses of actions available; the question is which one to choose. Choice of a specific action will lead to some consequences, which could be the goal we want to reach, but could also be something else, possibly undesirable. The decision upon a specific action is often difficult because its consequences are not known with certainty. This uncertainty comes in turn from a more general uncertainty about the whole context of the problem: unknown past or present details, unknown future events and responses, and so on. 

@@ example

This is what we call a **decision problem**.

A specific course of action may in turn be realized in several ways that are equivalent in regard to the outcome, but inequivalent in regard to costs, time, resources. We thus face a decision within a decision. In general, a decision problem may involve several decision sub-problems, in turn involving sub-sub-problems, and so on.

The main engineering goal itself could be to design and build an automated device that chooses an optimal course of action in a specific kind of uncertain situation. Think for instance of an aeronautic engineer who is designing an autopilot system.

Therefore, to analyse and tackle this kind of problems we would like to have a framework with the following features: it should take into consideration choices, consequences, costs and gains, and uncertainties; it should be susceptible to recursive application if needed; and it should be suited to being used not only for human engineers, but also for automated or artificial-intelligence devices.

Such a framework does exist: it is called [**Decision Theory**]{.text-warning}.

Decision theory has a long history, going back to Leibniz in the 1600s and partly even to Aristotle in the &minus;300s, and appearing in its present form around 1920--1960. What's remarkable about it is that it is not only *a* framework, but *the* framework we must use. A logico-mathematical theorem shows that any framework that does not break basic optimality and rationality criteria has to be equivalent to Decision Theory (in other words, it can use different technical terminology and rewrite mathematical operations in a different way, but it boils down to the same notions and operations of Decision Theory). So if you wanted to invent and use another framework, then either (a) it would lead to some irrational or illogical consequences, or (b) it would lead to results identical to Decision Theory's. Many frameworks that you are probably familiar with, such as optimization theory, are just specific applications or particular cases of Decision Theory.

Decision theory consists of two main theories:  [**Probability Theory**]{.text-warning}, which deals with data, information, uncertainty, inference; and  [**Utility Theory**]{.text-warning}, which deals with actions, consequences, gain and loss, decisions.

We shall get acquainted with Decision Theory step by step, introducing its main ideas and notions as they become necessary. Let us start with the first building blocks.


## Anatomy of a decision problem

An extremely important -- and surprisingly often neglected -- first step in every engineering problem is to define exactly what the problem is. This means, in particular, to specify unambiguously the goals, the available data and information, the available courses of action, the hypotheses of interest.

Decision theory analyses any problem in terms of minimal decision problems, each of which consists of these elements:

- *Agent*: the person or device that has to make an optimal decision.

- *Assumptions*: data and background information that are known, or temporarily imagined to be known, to the agent.

- *Conclusions*: hypotheses, conjectures, or actual facts that the agent wishes to assess; often they are related to the unknown consequences of the possible actions.

- *Probabilities* of the conclusions given the assumptions.

- *Courses of actions*: the choices available to the agent.

- *Utilities*: the gains and losses involved in choosing a course of action.

Together with the "assumptions" and "conclusions" it is also useful to keep in mind two more and somewhat distinct elements:

- *Knowns*: the data and information that are actually known to the agent.

- *Unknowns*: hypotheses, conjectures, and situations whose truth or falsity are actually unknown to the agent.

::::{.column-margin}
:::{.callout-caution}
## {{< fa seedling >}}
Remember: What matters is to be able to identify these elements in a concrete engineering problem, understanding their role. Their technical names don't matter.
:::
::::

The basic idea is that the agent will estimate effects of the conclusions given the assumptions, and from this estimate choose the optimal course of action.

Some of these elements may themselves be open to be analysed by a decision sub-problem. For instance, it may be unknown what the utilities are: thus we have a decision sub-problem to determine the optimal values we should choose for them. This is an example of the modularity of decision theory.

The elements above must be unambiguously identified in any decision problem. The analysis of the problem into these elements greatly helps in making the problem and its solution well-defined. Suppose someone (probably a politician) says: "We must solve the energy crisis by reducing energy consumption or producing more energy". This person has effectively said *nothing whatsoever*. By definition the "energy crisis" is the problem that energy production doesn't meet demand. So this person has only said "we would like the problem to be solved", without giving any solution. A decision-theory approach to this problem requires us to specify which concrete courses of action should be taken for reducing consumption or increasing productions, and what their costs, gains, and probable consequences would be.

::::{.column-margin}
::: {.callout-tip}
## {{< fa book-open >}} For the curious
See MacKay's rational options-costs analysis in [Sustainable Energy -- without the hot air](https://www.withouthotair.com)
:::
::::

An advantage of decision theory is that its application *forces* us to make sense of an engineering problem. A useful procedure is to formulate the general problem in terms of the elements above, identifying them clearly. If the definition of any of the terms involves uncertainty of further decisions, then we analyse it in turn as a decision sub-problem, and so on.
\

There are important aspects of engineering that cannot be captured by decision theory or, likely, by any logico-mathematical framework: the *discovery* or the *invention* of new technologies and solutions, for instance. These aspects cannot be planned or decided; but their fruits, once available, can be handled and used optimally by means of decision theory.

Artificial intelligence is proving to be a valuable aid in these aspects too. This kind of use of AI is outside the scope of the present notes. Some aspects of this creativity-assisting use, however, do fall within the domain of decision theory and of the present notes. A pattern-searching algorithm, for example, can be optimized by means of decision theory, if we have an idea of the kind of patterns that could be useful.
